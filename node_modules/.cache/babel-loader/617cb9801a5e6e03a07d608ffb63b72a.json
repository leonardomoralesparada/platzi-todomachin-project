{"ast":null,"code":"var _jsxFileName = \"/home/joalcapa/Escritorio/portafolio/platzi-todomachin-project/src/TodoContext/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useLocalStorage } from './useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/React.createContext();\n\nfunction TodoProvider(props) {\n  _s();\n\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error\n  } = useLocalStorage('TODOS_V1', []);\n  const [searchValue, setSearchValue] = React.useState('');\n  const [openModal, setOpenModal] = React.useState(false);\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const addTodo = text => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text\n    });\n    saveTodos(newTodos);\n  };\n\n  const completeTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      loading,\n      error,\n      totalTodos,\n      completedTodos,\n      searchValue,\n      setSearchValue,\n      searchedTodos,\n      addTodo,\n      completeTodo,\n      deleteTodo,\n      openModal,\n      setOpenModal\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoProvider, \"xHTgQ89foNMX1BiHMvpXrf5NXjk=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = TodoProvider;\nexport { TodoContext, TodoProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"sources":["/home/joalcapa/Escritorio/portafolio/platzi-todomachin-project/src/TodoContext/index.js"],"names":["React","useLocalStorage","TodoContext","createContext","TodoProvider","props","item","todos","saveItem","saveTodos","loading","error","searchValue","setSearchValue","useState","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","children"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useLocalStorage } from './useLocalStorage';\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage('TODOS_V1', []);\n  const [searchValue, setSearchValue] = React.useState('');\n  const [openModal, setOpenModal] = React.useState(false);\n\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const addTodo = (text) => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text,\n    });\n    saveTodos(newTodos);\n  };\n\n  const completeTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n  \n  return (\n    <TodoContext.Provider value={{\n      loading,\n      error,\n      totalTodos,\n      completedTodos,\n      searchValue,\n      setSearchValue,\n      searchedTodos,\n      addTodo,\n      completeTodo,\n      deleteTodo,\n      openModal,\n      setOpenModal,\n    }}>\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n\nexport { TodoContext, TodoProvider };\n\n\n"]},"metadata":{},"sourceType":"module"}